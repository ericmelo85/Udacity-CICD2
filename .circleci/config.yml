# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
#orbs:
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
commands:
  print_pipeline_id:
    description: "The aim of this command is to create reusable step that pints an env variable"
    steps:
      - run:
          name: "print env variable"
          command: echo ${CIRCLE_WORKFLOW_ID}

default: &defaults
  docker:
    - image: circleci/node:13.8.0

jobs:
  save_hello_world_output:
    <<: *defaults
    #docker:
    #  - image: circleci/node:13.8.0
    steps:
      - run: 
          name: "store hello World"
          command: echo "Hello World" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - .
  print_output_file:
    <<: *defaults
    #docker:
    #  - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "print project_owner name"
          command: |
            cat ~/output.txt

  print_pipeline:
    <<: *defaults
    steps:
      - print_pipeline_id

  test_failure:
    <<: *defaults
    steps:
      - run: return 1
      - run: 
          name: "catch test_failure"
          command: echo "The previous step failed dramatically"
          when: on_fail

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      #- welcome/run
      - save_hello_world_output
      - print_pipeline
      - print_output_file:
          requires:
            - save_hello_world_output
